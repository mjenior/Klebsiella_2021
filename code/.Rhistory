# Transcriptomic analysis
metadata <- read.delim('~/Desktop/repos/Klebsiella_2021/data/metadata.tsv', sep='\t', header=TRUE)
clinical_srr <- as.vector(subset(metadata, type == 'clinical')[,1])
laboratory_srr <- as.vector(subset(metadata, type == 'laboratory')[,1])
rm(metadata)
current <- paste0('~/Desktop/active_projects/klebsiella/data/transcript_mapping/', clinical_srr[1], '.mapped.tsv')
clinical_transcription <- read.delim(current, sep='\t', header=FALSE, row.names=1)
colnames(clinical_transcription) <- paste0(clinical_srr[1],'_', 1:ncol(clinical_transcription))
for (x in 2:length(clinical_srr)) {
current <- paste0('~/Desktop/active_projects/klebsiella/data/transcript_mapping/', clinical_srr[x], '.mapped.tsv')
current <- read.delim(current, sep='\t', header=FALSE, row.names=1)
colnames(current) <- paste0(clinical_srr[x],'_', 1:ncol(current))
clinical_transcription <- merge(clinical_transcription, current, by='row.names')
rownames(clinical_transcription) <- clinical_transcription$Row.names
clinical_transcription$Row.names <- NULL}
rm(clinical_srr, x, current)
clinical_transcription <- as.data.frame(t(clinical_transcription))
clinical_transcription$`*` <- NULL
current <- paste0('~/Desktop/active_projects/klebsiella/data/transcript_mapping/', laboratory_srr[1], '.mapped.tsv')
laboratory_transcription <- read.delim(current, sep='\t', header=FALSE, row.names=1)
colnames(laboratory_transcription) <- paste0(laboratory_srr[1],'_', 1:ncol(laboratory_transcription))
for (x in 2:length(laboratory_srr)) {
current <- paste0('~/Desktop/active_projects/klebsiella/data/transcript_mapping/', laboratory_srr[x], '.mapped.tsv')
current <- read.delim(current, sep='\t', header=FALSE, row.names=1)
colnames(current) <- paste0(laboratory_srr[x],'_', 1:ncol(current))
laboratory_transcription <- merge(laboratory_transcription, current, by='row.names')
rownames(laboratory_transcription) <- laboratory_transcription$Row.names
laboratory_transcription$Row.names <- NULL}
rm(laboratory_srr, x, current)
laboratory_transcription <- as.data.frame(t(laboratory_transcription))
laboratory_transcription$`*` <- NULL
# Remove low abundance samples
clinical_transcription <- as.data.frame(t(clinical_transcription))
laboratory_transcription <- as.data.frame(t(laboratory_transcription))
min_samp1 <- round(median(as.vector(colSums(clinical_transcription))) * 0.8)
min_samp2 <- round(median(as.vector(colSums(laboratory_transcription))) * 0.8)
min_samp <- min(c(min_samp1, min_samp2))
clinical_transcription <- clinical_transcription[,which(as.vector(colSums(clinical_transcription)) >= min_samp)]
laboratory_transcription <- laboratory_transcription[,which(as.vector(colSums(laboratory_transcription)) >= min_samp)]
rm(min_samp, min_samp1, min_samp2)
# Subsample data
library(vegan)
sub_samp1 <- round(median(as.vector(colSums(clinical_transcription))) * 0.8)
sub_samp2 <- round(median(as.vector(colSums(laboratory_transcription))) * 0.8)
sub_samp <- min(c(sub_samp1, sub_samp2))
for (x in 1:ncol(clinical_transcription)) {clinical_transcription[,x] <- as.vector(rrarefy(clinical_transcription[,x], sample=sub_samp))}
for (x in 1:ncol(laboratory_transcription)) {laboratory_transcription[,x] <- as.vector(rrarefy(laboratory_transcription[,x], sample=sub_samp))}
clinical_transcription <- as.data.frame(t(clinical_transcription))
laboratory_transcription <- as.data.frame(t(laboratory_transcription))
rm(sub_samp, sub_samp1, sub_samp2, x)
?write.table
# Calculate median values and save
clinical_median <- as.vector(apply(clinical_transcription, 1, median))
clinical_median <- as.data.frame(cbind(rownames(clinical_transcription), clinical_median))
View(clinical_median)
write.table(clinical_median, file='~/Desktop/active_projects/klebsiella/data/transcript_mapping/clinical_median_transript.tsv', quote=FALSE, sep='\t',row.names = FALSE, col.names = FALSE)
laboratory_median <- as.vector(apply(laboratory_transcription, 1, median))
laboratory_median <- as.data.frame(cbind(rownames(laboratory_transcription), laboratory_median))
write.table(laboratory_median, file='~/Desktop/active_projects/klebsiella/data/transcript_mapping/laboratory_median_transript.tsv', quote=FALSE, sep='\t',row.names = FALSE, col.names = FALSE)
rm(clinical_median, laboratory_median)
View(clinical_transcription)
ncol(clinical_transcription)
# Calculate median values and save
clinical_median <- as.vector(apply(clinical_transcription, 1, median))
# Calculate median values and save
clinical_median <- as.vector(apply(clinical_transcription, 2, median))
clinical_median <- as.data.frame(cbind(colnames(clinical_transcription), clinical_median))
View(clinical_median)
write.table(clinical_median, file='~/Desktop/active_projects/klebsiella/data/transcript_mapping/clinical_median_transript.tsv',
quote=FALSE, sep='\t', row.names=FALSE, col.names=FALSE)
laboratory_median <- as.vector(apply(laboratory_transcription, 2, median))
laboratory_median <- as.data.frame(cbind(colnames(laboratory_transcription), laboratory_median))
write.table(laboratory_median, file='~/Desktop/active_projects/klebsiella/data/transcript_mapping/laboratory_median_transript.tsv',
quote=FALSE, sep='\t', row.names=FALSE, col.names=FALSE)
rm(clinical_median, laboratory_median)
# Read in preprocessed data here to save time
clinical_transcription <- read.delim('~/Desktop/active_projects/klebsiella/data/transcript_mapping/clinical_subsampled_transript.tsv',
sep='\t', header=TRUE, row.names=1)
laboratory_transcription <- read.delim('~/Desktop/active_projects/klebsiella/data/transcript_mapping/laboratory_subsampled_transript.tsv',
sep='\t', header=TRUE, row.names=1)
View(clinical_transcription)
# Read in preprocessed data here to save time
clinical_transcription <- read.delim('~/Desktop/active_projects/klebsiella/data/transcript_mapping/clinical_subsampled_transript.tsv',
sep='\t', header=TRUE, row.names=1)
laboratory_transcription <- read.delim('~/Desktop/active_projects/klebsiella/data/transcript_mapping/laboratory_subsampled_transript.tsv',
sep='\t', header=TRUE, row.names=1)
clinical_valta <- clinical_transcription$KPN_04269
laboratory_valta <- laboratory_transcription$KPN_04269
rm(clinical_transcription, laboratory_transcription)
par(mar=c(3,4,0.5,2), las=1, mgp=c(2.5,0.7,0), xpd=FALSE, lwd=2)
plot(0, type='n', ylim=c(0,1100), xlim=c(0,2),
ylab='Transcript Abundance', xlab='', xaxt='n', yaxt='n', cex.lab=1.4)
axis(2, at=seq(0,1000,100), lwd=2, cex.axis=1.2)
boxplot(clinical_valta, cex=0, lwd=4, at=0.5, col='#B13AED',ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=4, xaxt='n', yaxt='n', add=TRUE)
pval <- round(wilcox.test(clinical_valta, laboratory_valta)$p.value, 4)
boxplot(clinical_valta, cex=0, lwd=4, at=1.5, col='#76EEC6', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=4, xaxt='n', yaxt='n', add=TRUE)
plot(0, type='n', ylim=c(0,1100), xlim=c(0,2),
ylab='Transcript Abundance', xlab='', xaxt='n', yaxt='n', cex.lab=1.4)
axis(2, at=seq(0,1000,100), lwd=2, cex.axis=1.2)
boxplot(clinical_valta, cex=0, lwd=4, at=0.5, col='#B13AED', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=4, xaxt='n', yaxt='n', add=TRUE)
boxplot(laboratory_valta, cex=0, lwd=4, at=1.5, col='#76EEC6', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=4, xaxt='n', yaxt='n', add=TRUE)
par(mar=c(3,4,0.5,2), las=1, mgp=c(2.5,0.7,0), xpd=FALSE, lwd=2)
plot(0, type='n', ylim=c(0,2000), xlim=c(0,2),
ylab='Transcript Abundance', xlab='', xaxt='n', yaxt='n', cex.lab=1.4)
axis(2, at=seq(0,2000,500), lwd=2, cex.axis=1.2)
boxplot(clinical_valta, cex=0, lwd=4, at=0.5, col='#B13AED', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=4, xaxt='n', yaxt='n', add=TRUE)
boxplot(laboratory_valta, cex=0, lwd=4, at=1.5, col='#76EEC6', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=4, xaxt='n', yaxt='n', add=TRUE)
plot(0, type='n', ylim=c(0,5000), xlim=c(0,2),
ylab='Transcript Abundance', xlab='', xaxt='n', yaxt='n', cex.lab=1.4)
axis(2, at=seq(0,2000,500), lwd=2, cex.axis=1.2)
boxplot(clinical_valta, cex=0, lwd=4, at=0.5, col='#B13AED', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=4, xaxt='n', yaxt='n', add=TRUE)
boxplot(laboratory_valta, cex=0, lwd=4, at=1.5, col='#76EEC6', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=4, xaxt='n', yaxt='n', add=TRUE)
plot(0, type='n', ylim=c(0,5500), xlim=c(0,2),
ylab='Transcript Abundance', xlab='', xaxt='n', yaxt='n', cex.lab=1.4)
axis(2, at=seq(0,2500,500), lwd=2, cex.axis=1.2)
boxplot(clinical_valta, cex=0, lwd=4, at=0.5, col='#B13AED', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=4, xaxt='n', yaxt='n', add=TRUE)
boxplot(laboratory_valta, cex=0, lwd=4, at=1.5, col='#76EEC6', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=4, xaxt='n', yaxt='n', add=TRUE)
segments(0.25, median(m9_thd2pp), 0.75, lwd=4)
par(mar=c(3,4,0.5,2), las=1, mgp=c(2.5,0.7,0), xpd=FALSE, lwd=2)
plot(0, type='n', ylim=c(0,6000), xlim=c(0,2),
ylab='Transcript Abundance', xlab='', xaxt='n', yaxt='n', cex.lab=1.4)
axis(2, at=seq(0,6000,1000), lwd=2, cex.axis=0.7)
boxplot(clinical_valta, cex=0, lwd=3, at=0.5, col='#B13AED', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=3, xaxt='n', yaxt='n', add=TRUE)
boxplot(laboratory_valta, cex=0, lwd=3, at=1.5, col='#76EEC6', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=3, xaxt='n', yaxt='n', add=TRUE)
mtext(c('Clinical', 'Laboratory'), side=1, at=c(0.5,1.5), padj=1, cex=1.2)
par(mar=c(3,4,2,1), las=1, mgp=c(2.5,0.7,0), xpd=FALSE, lwd=2)
plot(0, type='n', ylim=c(0,6000), xlim=c(0,2), main='Valine Tranaminase (KPN_04269)',
ylab='Transcript Abundance', xlab='', xaxt='n', yaxt='n', cex.lab=1.4)
axis(2, at=seq(0,6000,1000), lwd=2, cex.axis=0.7)
boxplot(clinical_valta, cex=0, lwd=3, at=0.5, col='#B13AED', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=3, xaxt='n', yaxt='n', add=TRUE)
boxplot(laboratory_valta, cex=0, lwd=3, at=1.5, col='#76EEC6', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=3, xaxt='n', yaxt='n', add=TRUE)
segments(x0=0.5, y0=5500, x1=0.75)
segments(x0=0.5, y0=5500, x1=1.5)
text(x=1, y=5800, '***', font=2, cex=1.5)
pdf(file='~/Desktop/repos/Klebsiella_2021/results/figures/Figure_S5.pdf', width=4, height=5)
par(mar=c(3,4,2,1), las=1, mgp=c(2.5,0.7,0), xpd=FALSE, lwd=2)
plot(0, type='n', ylim=c(0,6000), xlim=c(0,2), main='Valine Tranaminase (KPN_04269)',
ylab='Transcript Abundance', xlab='', xaxt='n', yaxt='n', cex.lab=1.4)
axis(2, at=seq(0,6000,1000), lwd=2, cex.axis=0.7)
boxplot(clinical_valta, cex=0, lwd=3, at=0.5, col='#B13AED', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=3, xaxt='n', yaxt='n', add=TRUE)
boxplot(laboratory_valta, cex=0, lwd=3, at=1.5, col='#76EEC6', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=3, xaxt='n', yaxt='n', add=TRUE)
mtext(c('Clinical', 'Laboratory'), side=1, at=c(0.5,1.5), padj=1, cex=1.2)
segments(x0=0.5, y0=5500, x1=1.5)
text(x=1, y=5800, '***', font=2, cex=1.5)
dev.off()
pdf(file='~/Desktop/repos/Klebsiella_2021/results/figures/Figure_S5.pdf', width=3, height=4)
par(mar=c(3,4,2,1), las=1, mgp=c(2.5,0.7,0), xpd=FALSE, lwd=2)
plot(0, type='n', ylim=c(0,6000), xlim=c(0,2), main='Valine Tranaminase (KPN_04269)',
ylab='Transcript Abundance', xlab='', xaxt='n', yaxt='n', cex.lab=1.4)
axis(2, at=seq(0,6000,1000), lwd=2, cex.axis=0.7)
boxplot(clinical_valta, cex=0, lwd=3, at=0.5, col='#B13AED', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=3, xaxt='n', yaxt='n', add=TRUE)
boxplot(laboratory_valta, cex=0, lwd=3, at=1.5, col='#76EEC6', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=3, xaxt='n', yaxt='n', add=TRUE)
mtext(c('Clinical', 'Laboratory'), side=1, at=c(0.5,1.5), padj=1, cex=1.2)
segments(x0=0.5, y0=5500, x1=1.5)
text(x=1, y=5800, '***', font=2, cex=1.5)
dev.off()
pdf(file='~/Desktop/repos/Klebsiella_2021/results/figures/Figure_S5.pdf', width=4, height=5)
par(mar=c(3,4,2,1), las=1, mgp=c(2.5,0.7,0), xpd=FALSE, lwd=2)
plot(0, type='n', ylim=c(0,6000), xlim=c(0,2), main='Valine Tranaminase (KPN_04269)',
ylab='Transcript Abundance', xlab='', xaxt='n', yaxt='n', cex.lab=1.4)
axis(2, at=seq(0,6000,1000), lwd=2, cex.axis=0.7)
boxplot(clinical_valta, cex=0, lwd=3, at=0.5, col='#B13AED', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=3, xaxt='n', yaxt='n', add=TRUE)
boxplot(laboratory_valta, cex=0, lwd=3, at=1.5, col='#76EEC6', ylab='', staplewex=0.6,
boxwex=1, lty=1, medlwd=3, xaxt='n', yaxt='n', add=TRUE)
mtext(c('Clinical', 'Laboratory'), side=1, at=c(0.5,1.5), padj=1, cex=1.2)
segments(x0=0.5, y0=5500, x1=1.5)
text(x=1, y=5800, '***', font=2, cex=1.5)
dev.off()
# Transpose transcriptome replicates for new riptide function
clinical <- as.data.frame(t(read.delim('/home/mjenior/Desktop/active_projects/klebsiella/data/transcript_mapping/clinical_subsampled_transript.tsv', sep='\t', header=TRUE, row.names=1)))
write.table(clinical, file='/home/mjenior/Desktop/active_projects/klebsiella/data/transcript_mapping/clinical_replicates.tsv',
quote=FALSE, sep='\t', row.names=TRUE, col.names=FALSE)
laboratory <- as.data.frame(t(read.delim('/home/mjenior/Desktop/active_projects/klebsiella/data/transcript_mapping/laboratory_subsampled_transript.tsv', sep='\t', header=TRUE, row.names=1)))
write.table(laboratory, file='/home/mjenior/Desktop/active_projects/klebsiella/data/transcript_mapping/laboratory_replicates.tsv',
quote=FALSE, sep='\t', row.names=TRUE, col.names=FALSE)
rm(clinical, laboratory)
#-----------------------------------------------------------------------------------------------------------#
# Read in data
clinical <- '~/Desktop/repos/Klebsiella_2021/data/clinical_maxfit_reps/flux_samples.tsv'
clinical <- read.delim(clinical, sep='\t', header=TRUE, row.names=1)
clinical <- as.data.frame(apply(clinical, 2, as.numeric))
rownames(clinical) <- paste0('clinical_', c(1:nrow(clinical)))
laboratory <- '~/Desktop/repos/Klebsiella_2021/data/laboratory_maxfit_reps/flux_samples.tsv'
laboratory <- read.delim(laboratory, sep='\t', header=TRUE, row.names=1)
laboratory <- as.data.frame(apply(laboratory, 2, as.numeric))
rownames(laboratory) <- paste0('laboratory_', c(1:nrow(laboratory)))
median(clinical[,'ILETA'])
median(laboratory[,'ILETA'])
median(clinical[,'ALATA_L'])
median(laboratory[,'ALATA_L'])
median(clinical[,'VPAMTr'])
median(laboratory[,'VPAMTr'])
median(clinical[,'VALTA'])
median(laboratory[,'VALTA'])
# Create metadata table
clinical_metadata <- cbind(rownames(clinical), rep('clinical', nrow(clinical)))
colnames(clinical_metadata) <- c('sample','condition')
laboratory_metadata <- cbind(rownames(laboratory), rep('laboratory', nrow(laboratory)))
colnames(laboratory_metadata) <- c('sample','condition')
metadata <- as.data.frame(rbind(clinical_metadata, laboratory_metadata))
rm(clinical_metadata, laboratory_metadata)
# Save biomass fluxes
clinical_biomass <- clinical$BIOMASS_
laboratory_biomass <- laboratory$BIOMASS_
biomass_pval <- round(wilcox.test(clinical_biomass, laboratory_biomass, exact=FALSE)$p.value, 4)
# Separate into conserved reactions
core_rxns <- intersect(colnames(clinical), colnames(laboratory))
clinical_core <- clinical[, core_rxns]
clinical_core$BIOMASS_ <- NULL
laboratory_core <- laboratory[, core_rxns]
laboratory_core$BIOMASS_ <- NULL
rm(core_rxns)
# Assmble flux sample table
flux_samples <- as.data.frame(rbind(clinical_core, laboratory_core))
flux_samples <- flux_samples + abs(min(flux_samples))
# Calculate dissimilarity
library(vegan)
flux_dist <- vegdist(flux_samples, method='bray')
# Test difference
flux_samples$condition <- as.factor(metadata$condition)
pval <- adonis(flux_dist ~ condition, data=flux_samples, perm=999, method='bray')
pval <- pval$aov.tab[[6]][1]
pval <- as.character(round(pval, 4))
# Ordination analysis - center point
flux_nmds <- as.data.frame(metaMDS(flux_dist, k=2, trymax=50)$points)
flux_x <- (abs(max(flux_nmds$MDS1)) - abs(min(flux_nmds$MDS1))) / 2
flux_y <- (abs(max(flux_nmds$MDS2)) - abs(min(flux_nmds$MDS2))) / 2
flux_nmds$MDS1 <- flux_nmds$MDS1 - flux_x
flux_nmds$MDS2 <- flux_nmds$MDS2 - flux_y
flux_x <- max(abs(max(flux_nmds$MDS1)), abs(min(flux_nmds$MDS1))) + 0.01
flux_y <- max(abs(max(flux_nmds$MDS2)), abs(min(flux_nmds$MDS2))) + 0.01
# Subset points
flux_nmds <- merge(x=metadata, y=flux_nmds, by.x='sample', by.y='row.names')
clinical_points <- subset(flux_nmds, condition == 'clinical')
laboratory_points <- subset(flux_nmds, condition == 'laboratory')
# Calculate dentroids
clinical_centroids <- aggregate(cbind(clinical_points$MDS1, clinical_points$MDS2)~clinical_points$condition, data=clinical_points, mean)
laboratory_centroids <- aggregate(cbind(laboratory_points$MDS1, laboratory_points$MDS2)~laboratory_points$condition, data=laboratory_points, mean)
# Mean wwithin-group dissimilarity
flux_groups <- as.factor(c(rep('clinical', nrow(clinical_core)), rep('laboratory', nrow(laboratory_core))))
meandist(flux_dist, grouping=flux_groups)
